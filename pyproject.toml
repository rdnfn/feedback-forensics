[project]
name = "forensics"
version = "0.1.1"
authors = [
  { name="rdnfn", email="hi@arduin.io" },
  { name="timokau" },
]
description = "Feedback Forensics"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "langchain",
  "python-dotenv",
  "langchain-openai",
  "langchain-anthropic",
  "langchain-community",
  "scikit-learn",
  "anthropic",
  "loguru",
  "hydra-core",
  "pandas",
  "matplotlib",
  "datasets", # To fetch huggingface datasets
  "wandb",
  "alpaca-eval",
  "nbconvert",
  "jupyter",
  "ipywidgets", # IProgress in jupyter notebooks
  "gradio",
  "plotly",
]

[project.optional-dependencies]
dev = [
    "pytest >=6.0",
    "black ==24.10.0",
    "bump-my-version",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/forensics"]

[tool.hatch.build.targets.wheel.force-include]
"src/forensics/assets" = "forensics/assets"

[tool.bumpversion]
current_version = "0.1.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[project.scripts]
feedback-forensics = "forensics.app.main:run"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["src"]
python_files = ["*_test.py"]

[tool.black]
line-length = 88
target-version = ['py311']